name: Build release appbundle

on:
  push:
    tags:
      - "**"

jobs:
  releaseAppBundle:
    name: Build release bundle
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: xpeapp_android
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Create firebase config file
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_FILE }}" | base64 -d > app/google-services.json
          if [ -n "${{ secrets.PROD_CONFIG_FILE }}" ]; then
            mkdir -p app/config
            echo "${{ secrets.PROD_CONFIG_FILE }}" | base64 -d > app/config/prod.properties
          fi

      - name: Create key.properties file
        run: |
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 -d > key.properties

      - name: Create keystore file
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -d > app/keystore.jks

      - name: Get the version name
        id: get_version_name
        run: echo ::set-output name=VERSION_NAME::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get the version code
        id: get_version_code
        run: |
          versionName=${{ steps.get_version_name.outputs.VERSION_NAME }}
          major=$(echo $versionName | cut -d . -f 1)
          minor=$(echo $versionName | cut -d . -f 2)
          patch=$(echo $versionName | cut -d . -f 3)
          versionCode=$(($major * 10000 + $minor * 100 + $patch))
          echo ::set-output name=VERSION_CODE::$(echo $versionCode)

      - name: Grant execute permission for gradlew and build
        env:
          GITHUB_USER: ${GITHUB_ACTOR}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./gradlew
          ./gradlew bundleRelease -PversionCode=${{ steps.get_version_code.outputs.VERSION_CODE }} -PversionName=${{ steps.get_version_name.outputs.VERSION_NAME }}
          ./gradlew assembleRelease -PversionCode=${{ steps.get_version_code.outputs.VERSION_CODE }} -PversionName=${{ steps.get_version_name.outputs.VERSION_NAME }}

      - name: Upload release bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-bundle
          path: "xpeapp_android/app/build/outputs/bundle/release/app-release.aab"

      - name: Upload release apk
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: "xpeapp_android/app/build/outputs/apk/release/app-release.apk"
