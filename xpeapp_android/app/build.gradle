plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id "com.google.devtools.ksp"
    id "org.sonarqube" version "4.2.1.3168"
    id 'jacoco'
}

def getPropertiesFile = { path ->
    Properties properties = new Properties()
    def propertiesFile = rootProject.file(path)
    if (propertiesFile.exists()) {
        properties.load(new FileInputStream(propertiesFile))
    }
    return properties
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.xpeho.xpeapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.xpeho.xpeapp"
        minSdk 26
        targetSdk 34
        versionCode 6
        versionName "1.3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            getPropertiesFile('app/config/uat.properties').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            getPropertiesFile('app/config/prod.properties').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn 'testDebugUnitTest' // Run unit tests before generating the report

    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/ui/**',
            '**/AppModule.kt',
            '**/MainActivity.kt',
            '**/XpeApp.kt'
    ]
    def debugTree = fileTree(dir: layout.buildDirectory.dir("tmp/kotlin-classes/debug").get().asFile, excludes: fileFilter)
    def mainSrc = "$projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: layout.buildDirectory.get().asFile, includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

sonar {
    properties {
        property "sonar.projectKey", "xpeapp_android"
        property "sonar.projectName", "xpeapp_android"
        property "sonar.coverage.exclusions", "**/ui/**, **/AppModule.kt, **/MainActivity.kt, **/XpeApp.kt"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'androidx.activity:activity-compose:1.9.2'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation("androidx.compose.material3:material3-android:1.3.0")
    implementation("androidx.core:core-splashscreen:1.0.1")
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation "androidx.compose.material:material-icons-core:1.7.3"
    implementation "androidx.compose.material:material-icons-extended:1.7.3"
    implementation "androidx.compose.animation:animation-core:$compose_ui_version"

    // Test
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.8.6'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.13"

    // Android Test
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"

    // Debug implementation
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // Import the BoM for the Firebase platform
    implementation platform("com.google.firebase:firebase-bom:33.4.0")

    // Firebase
    implementation("com.google.firebase:firebase-auth-ktx")
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.0'
    implementation 'com.google.firebase:firebase-messaging:24.0.2'
    implementation 'com.google.firebase:firebase-storage-ktx:21.0.1'

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.8.2"

    // Use Json
    implementation "com.google.code.gson:gson:2.10.1"

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.8.6"

    //Retrofit for http requests
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    implementation "androidx.datastore:datastore-preferences:1.1.1"

    //XpehoUI
    implementation "com.xpeho.packages:xpeho_ui_android:1.5.0"
}